@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400&display=swap');
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

#home{
    background: rgb(2, 2, 2);
    height: 100vh;
}

.grid{
    /* background: rgb(82, 71, 71); */
    height: 100vh;
    width: 100vw;
    max-width: 1200px;
    margin:  auto;  /* para centrar */
   /*  box-shadow: 0 0 30px -10px rgba(138, 135, 135, 0.5); */
    display: grid;
    grid-template-columns: repeat(8,2fr);
    grid-template-rows: repeat(6,1fr);
    overflow: hidden;
    font-family: 'Montserrat', sans-serif;
}

.grid::before{
    content: '';
    grid-column: 4/-1;  /*  desde la 4 hasta el finnal  */
    grid-row: 1/-1;     /*  de la primera linea a ultima  */
    background-image: url('../gallery/img/honjo_libro.jpg');
    background-repeat: no-repeat;
    /* background-size: ; */ /*  para que la img se ajuste a contenedor */
    background-position: 50% 50%;  /* pare centrar el trozo de img que queremos ense√±ar */
    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0); /* !!!!!IMPORTANTE!!!! se hace con la heramienta de clip-path  y sera la posicion INICIAL para animacion */
    animation: show 3s 3s ease-out forwards; /* FORWARDS- una vez termina la animation el elemento se quedara con los estilos donde termina y no con su estado inicial(en este caso cerrado) */
                                      /* ease el modo de como aparece la imagen, por defecto es ease aun que no lo pongas. se puede personalizar con https://cubic-bezier.com/#.17,.67,.83,.67 */
                                      /* cubic-bezier(.47,.25,.25,.89) por ejemplo */  
}

.grid_texts{
    font-family: 'Montserrat', sans-serif;
   /*  mix-blend-mode: difference; */ /* cambia de color depandiendo de background */
    color: white;
    grid-column: 1/8 ;    /* cada elemento visual tendra su posicion en el grid, si no se va a desconfigurar todo el grid */
    grid-row: 1/-2;
    z-index: 1;  /* todos los elementos grid pueden tener z-index: ; sin tener que poner position:absolut */
    display: flex;
    flex-direction: column;
    justify-content: center;
    transform: translate(30%);
    /* animation: move 2s 2s forwards; */ /* dere 2s y que espere 2s para ejecutarse */
    clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%); /*  para que el texto aparezca dedde abajo asia arriba */
    animation: show 2s ease forwards, move 1s 2s forwards ;  
}
.grid_title{
    font-size: 2.5rem;
    letter-spacing: 3px;
    font-weight: 500;
}

.grid_title--transform{
    /* all: initial; */
    /* mix-blend-mode: initial; */
    color: red;
    font-size: 4rem;
    letter-spacing: 3px;
    transform: translate(20%);
    animation: move 1s  2s forwards;
}

/* !!!! Importante !!!! en la aninacion no ponemos un estado inicial (0% o from) poque cada elemento ya tiene su estado inicial que hemos puesto con clip-path Asi que solo ponemos 100% o to */
@keyframes show{
    to{
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }
}

@keyframes move{
    to{
        transform: translate(0);
    }
}





    @media all and (max-width:500px){
      
        .grid_title{
            font-size: 1.5rem; 
        }
        .grid_title--transform{
            font-size: 2.4rem;       
        }
        .grid_texts{
            transform: translate(30%);  
        }
        .grid::before{
            grid-column: 3/-1;
            background-image: url('../gallery/img/inicio4.png');
            background-position: 0% 50%;
        }


        @keyframes move{
            to{
                transform: translate(5%);
            }
        }
       

    }